name: Docker Image CI

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:

  pull_request_checks:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: test -f ./frontend/package.json && echo "Frontend package.json exists"
      - run: test -f ./frontend/Dockerfile && echo "Frontend Dockerfile exists"
      - uses: amannn/action-semantic-pull-request@v5
        with:
          githubBaseUrl: https://api.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      backend1: ${{ steps.filter.outputs.backend1 }}
      backend2: ${{ steps.filter.outputs.backend2 }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend1: 'backend1/**'
            backend2: 'backend2/**'
            frontend: 'frontend/**'

  build_and_push_backend:
    needs: detect_changes
    if: needs.detect_changes.outputs.backend1 == 'true' || needs.detect_changes.outputs.backend2 == 'true'
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'PRODUCTION' || 'DEVELOPMENT' }}
    outputs:
      docker_tag: ${{ steps.vars.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - id: vars
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "tag=$(cat VERSION)" >> $GITHUB_OUTPUT
          else
            echo "tag=$(echo '${{ github.ref_name }}' | tr '/' '-')-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - uses: docker/setup-buildx-action@v3

      - if: needs.detect_changes.outputs.backend1 == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./backend1
          file: ./backend1/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/blog-backend1:${{ steps.vars.outputs.tag }}
          outputs: type=oci, dest=backend1-artifact.tar

      - if: needs.detect_changes.outputs.backend1 == 'true'
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: v0.64.1

      - if: needs.detect_changes.outputs.backend1 == 'true'
        run: curl -sSL -o html.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl

      - if: needs.detect_changes.outputs.backend1 == 'true'
        run: |
          trivy image --format template --template @html.tpl \
            -o backend1-trivy-report.html \
            docker.io/${{ secrets.DOCKER_USERNAME }}/blog-backend1:${{ steps.vars.outputs.tag }}

      - if: needs.detect_changes.outputs.backend1 == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report-backend1
          path: backend1-trivy-report.html

      - if: needs.detect_changes.outputs.backend1 == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: backend1-artifact
          path: backend1-artifact.tar

      - if: needs.detect_changes.outputs.backend2 == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./backend2
          file: ./backend2/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/blog-backend2:${{ steps.vars.outputs.tag }}
          outputs: type=oci, dest=backend2-artifact.tar

      - if: needs.detect_changes.outputs.backend2 == 'true'
        run: |
          trivy image --format template --template @html.tpl \
            -o backend2-trivy-report.html \
            docker.io/${{ secrets.DOCKER_USERNAME }}/blog-backend2:${{ steps.vars.outputs.tag }}

      - if: needs.detect_changes.outputs.backend2 == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report-backend2
          path: backend2-trivy-report.html

      - if: needs.detect_changes.outputs.backend2 == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: backend2-artifact
          path: backend2-artifact.tar

  build_and_push_frontend:
    needs: detect_changes
    if: needs.detect_changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'PRODUCTION' || 'DEVELOPMENT' }}
    outputs:
      docker_tag: ${{ steps.vars.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - id: vars
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "tag=$(cat VERSION)" >> $GITHUB_OUTPUT
          else
            echo "tag=$(echo '${{ github.ref_name }}' | tr '/' '-')-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - uses: docker/setup-buildx-action@v3

      - uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/blog-frontend:${{ steps.vars.outputs.tag }}
          outputs: type=oci, dest=frontend-artifact.tar

      - uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: v0.64.1

      - run: curl -sSL -o html.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl

      - run: |
          trivy image --format template --template @html.tpl \
            -o frontend-trivy-report.html \
            docker.io/${{ secrets.DOCKER_USERNAME }}/blog-frontend:${{ steps.vars.outputs.tag }}

      - uses: actions/upload-artifact@v4
        with:
          name: trivy-report-frontend
          path: frontend-trivy-report.html

      - uses: actions/upload-artifact@v4
        with:
          name: frontend-artifact
          path: frontend-artifact.tar

  frontend_build_gh_pages:
    needs: detect_changes
    if: needs.detect_changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: yarn
          cache-dependency-path: ./frontend/yarn.lock
      - run: yarn install
      - run: yarn build
        env:
          VITE_CLERK_PUBLISHABLE_KEY: ${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}
          VITE_BACKEND1_BASE_URL: http://localhost:3000/
          VITE_BACKEND2_BASE_URL: http://localhost:3000/
      - uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/dist

  upload_trivy_reports:
    needs: [build_and_push_backend, build_and_push_frontend, detect_changes]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: scan

      - run: |
          mkdir -p combined-site/scan
          cp -r scan/* combined-site/scan/

      - uses: actions/upload-artifact@v4
        with:
          name: github-pages-extras
          path: combined-site/scan

  frontend_deploy:
    needs: [frontend_build_gh_pages, upload_trivy_reports]
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: combined-site

      - uses: actions/download-artifact@v4
        with:
          name: github-pages-extras
          path: combined-site

      - id: deployment
        uses: actions/deploy-pages@v4
        with:
          path: combined-site
